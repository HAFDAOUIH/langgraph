from langchain_core.callbacks import AsyncCallbackManager, CallbackManager, Callbacks as Callbacks
from langchain_core.runnables import RunnableConfig
from langgraph.checkpoint.base import CheckpointMetadata as CheckpointMetadata
from langgraph.config import get_config as get_config, get_store as get_store, get_stream_writer as get_stream_writer
from typing import Any, Sequence

def recast_checkpoint_ns(ns: str) -> str: ...
def patch_configurable(config: RunnableConfig | None, patch: dict[str, Any]) -> RunnableConfig: ...
def patch_checkpoint_map(config: RunnableConfig | None, metadata: CheckpointMetadata | None) -> RunnableConfig: ...
def merge_configs(*configs: RunnableConfig | None) -> RunnableConfig: ...
def patch_config(config: RunnableConfig | None, *, callbacks: Callbacks = None, recursion_limit: int | None = None, max_concurrency: int | None = None, run_name: str | None = None, configurable: dict[str, Any] | None = None) -> RunnableConfig: ...
def get_callback_manager_for_config(config: RunnableConfig, tags: Sequence[str] | None = None) -> CallbackManager: ...
def get_async_callback_manager_for_config(config: RunnableConfig, tags: Sequence[str] | None = None) -> AsyncCallbackManager: ...
def ensure_config(*configs: RunnableConfig | None) -> RunnableConfig: ...
